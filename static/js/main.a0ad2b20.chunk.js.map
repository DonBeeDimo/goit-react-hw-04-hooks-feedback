{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Contaiter.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","FeedbackOptions","options","onChangeFeedback","list","map","option","btn","type","onClick","Statistics","good","neutral","bad","total","average","item","Section","title","Notification","message","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","keys","Object","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,kBCAzDD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,+B,oBCA7DD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,MAAQ,8B,qKCCX,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,oBCDxB,SAASI,EAAT,GAAyD,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,iBACjD,OACE,oBAAIL,UAAWC,IAAEK,KAAjB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACER,UAAWC,IAAEQ,IACbC,KAAK,SACLC,QAAS,WACPN,EAAiBG,IAJrB,SAOGA,KARIA,Q,oBCJF,SAASI,EAAT,GAA6D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC9D,OACE,qBAAIjB,UAAWC,IAAEK,KAAjB,UACE,qBAAIN,UAAWC,IAAEiB,KAAjB,kBAA6BL,KAC7B,qBAAIb,UAAWC,IAAEiB,KAAjB,qBAAgCJ,KAChC,qBAAId,UAAWC,IAAEiB,KAAjB,iBAA4BH,KAC5B,qBAAIf,UAAWC,IAAEiB,KAAjB,mBAA8BF,OAC9B,qBAAIhB,UAAWC,IAAEiB,KAAjB,qBAAgCD,IAAhC,U,qBCPS,SAASE,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOrB,EAAY,EAAZA,SACvC,OACE,sBAAKC,UAAWC,IAAEmB,MAAlB,UACE,6BAAKA,IACJrB,K,qBCJQ,SAASsB,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGtB,UAAWC,IAAEmB,MAAhB,SAAwBE,I,IC+DlBC,E,4MA1DbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPV,iBAAmB,SAAAG,GACjB,EAAKiB,UAAS,SAAAC,GAAS,sBACpBlB,EAASkB,EAAUlB,GAAU,O,EAKlCmB,mBAAqB,WACnB,MAA+B,EAAKH,MAEpC,OAFA,EAAQX,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBa,gCAAkC,WAChC,MAA+B,EAAKJ,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OAAOc,KAAKC,MAAOjB,GAAQA,EAAOC,EAAUC,GAAQ,M,4CAGtD,WACE,IAAMgB,EAAOC,OAAOD,KAAKE,KAAKT,OAC9B,EAA+BS,KAAKT,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAACjB,EAAD,WACE,cAACqB,EAAD,CAASC,MAAM,6BAAf,SACE,cAACjB,EAAD,CACEC,QAAS2B,EACT1B,iBAAkB4B,KAAK5B,qBAI1B4B,KAAKN,qBAAuB,GAC3B,cAACR,EAAD,CAASC,MAAM,aAAf,SACE,cAACR,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,KAAKN,mBACZV,QAASgB,KAAKL,oCAKW,IAA9BK,KAAKN,sBACJ,cAACN,EAAD,CAAcC,QAAQ,6B,GApDdY,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a0ad2b20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1thZJ\",\"item\":\"Statistics_item__1KRiS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__1MGQ8\",\"btn\":\"FeedbackOptions_btn__3vB7y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__VQv2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1cOeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__3GDIv\"};","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ options, onChangeFeedback }) {\n  return (\n    <ul className={s.list}>\n      {options.map(option => (\n        <li key={option}>\n          <button\n            className={s.btn}\n            type=\"button\"\n            onClick={() => {\n              onChangeFeedback(option);\n            }}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import s from './Statistics.module.css';\n\nexport default function Statistics({ good, neutral, bad, total, average }) {\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>Good:{good}</li>\n      <li className={s.item}>Neutral:{neutral}</li>\n      <li className={s.item}>Bad:{bad}</li>\n      <li className={s.item}>Total:{total()}</li>\n      <li className={s.item}>Average:{average()}%</li>\n    </ul>\n  );\n}\n","import s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={s.title}>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n}\n","import s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={s.title}>{message}</p>;\n}\n","import { Component } from 'react';\nimport Container from './components/Container';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section/';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onChangeFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n    // console.log('+1');\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n\n    return Math.round((good / (good + neutral + bad)) * 100);\n  };\n\n  render() {\n    const keys = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={keys}\n            onChangeFeedback={this.onChangeFeedback}\n          />\n        </Section>\n\n        {this.countTotalFeedback() > 0 && (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              average={this.countPositiveFeedbackPercentage}\n            />\n          </Section>\n        )}\n\n        {this.countTotalFeedback() === 0 && (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}